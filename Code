# Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error

# Loading dataset
df = pd.read_csv('flight_hotel_prices.csv') # Assuming I have the required data set

# Displaying first few rows of the dataset
print(df.head())

# Data preprocessing
# Converting date column to datetime format
df['date'] = pd.to_datetime(df['date'])

# Encoding categorical variables (if any)
# Assuming 'location' and 'airline/hotel' are categorical variables
df = pd.get_dummies(df, columns=['location', 'airline/hotel'], drop_first=True)

# Splitting data into features (X) and target variable (y)
X = df.drop(columns=['price'])
y = df['price']

# Splitting data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Machine learning modeling
# Training a simple linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predicting prices on the testing set
y_pred = model.predict(X_test)

# Evaluating model performance
mae = mean_absolute_error(y_test, y_pred)
print("Mean Absolute Error:", mae)

# Basic visualization of predictions versus actual prices
plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred)
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', linestyle='--')
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.title('Actual vs. Predicted Prices')
plt.show()
